{"ast":null,"code":"var _jsxFileName = \"/Users/hwangtaehwan/Desktop/momentum/src/Weather.js\",\n  _s = $RefreshSig$();\nimport styles from \"./Home.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const [info, setInfo] = useState(\"\");\n  function onGeoSuccess(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n    const API_KEY = \"c4f094ed9d2fc072ab0a4fde9eb23da9\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n    fetch(url).then(response => response.json()).then(data => {\n      setInfo(`${data.name} / ${data.weather[0].main}, ${data.main.temp}`);\n    });\n  }\n  function onGeoFail() {\n    setInfo(\"Failed to get your current location\");\n  }\n  useEffect(navigator.geolocation.getCurrentPosition(onGeoSuccess, onGeoFail), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.weather,\n    children: info\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n_s(Weather, \"8QxmA+nwvnYcuRWmCP/i7wl+i0w=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["styles","useState","useEffect","Weather","info","setInfo","onGeoSuccess","position","lat","coords","latitude","lon","longitude","API_KEY","url","fetch","then","response","json","data","name","weather","main","temp","onGeoFail","navigator","geolocation","getCurrentPosition"],"sources":["/Users/hwangtaehwan/Desktop/momentum/src/Weather.js"],"sourcesContent":["import styles from \"./Home.module.css\";\nimport { useState, useEffect } from \"react\";\nfunction Weather() {\n  const [info, setInfo] = useState(\"\");\n\n  function onGeoSuccess(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n    const API_KEY = \"c4f094ed9d2fc072ab0a4fde9eb23da9\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInfo(`${data.name} / ${data.weather[0].main}, ${data.main.temp}`);\n      });\n  }\n\n  function onGeoFail() {\n    setInfo(\"Failed to get your current location\");\n  }\n  useEffect(\n    navigator.geolocation.getCurrentPosition(onGeoSuccess, onGeoFail),\n    []\n  );\n\n  return <div className={styles.weather}>{info}</div>;\n}\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAC5C,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASK,YAAY,CAACC,QAAQ,EAAE;IAC9B,MAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAM,CAACC,QAAQ;IACpC,MAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAM,CAACG,SAAS;IACrC,MAAMC,OAAO,GAAG,kCAAkC;IAClD,MAAMC,GAAG,GAAI,uDAAsDN,GAAI,QAAOG,GAAI,UAASE,OAAQ,eAAc;IACjHE,KAAK,CAACD,GAAG,CAAC,CACPE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdd,OAAO,CAAE,GAAEc,IAAI,CAACC,IAAK,MAAKD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAK,KAAIH,IAAI,CAACG,IAAI,CAACC,IAAK,EAAC,CAAC;IACtE,CAAC,CAAC;EACN;EAEA,SAASC,SAAS,GAAG;IACnBnB,OAAO,CAAC,qCAAqC,CAAC;EAChD;EACAH,SAAS,CACPuB,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACrB,YAAY,EAAEkB,SAAS,CAAC,EACjE,EAAE,CACH;EAED,oBAAO;IAAK,SAAS,EAAExB,MAAM,CAACqB,OAAQ;IAAA,UAAEjB;EAAI;IAAA;IAAA;IAAA;EAAA,QAAO;AACrD;AAAC,GAxBQD,OAAO;AAAA,KAAPA,OAAO;AAyBhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}