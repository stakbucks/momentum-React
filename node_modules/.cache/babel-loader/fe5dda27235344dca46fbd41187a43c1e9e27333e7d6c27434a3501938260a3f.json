{"ast":null,"code":"var _s = $RefreshSig$();\nfunction Weather() {\n  _s();\n  const [info, setInfo] = useState({\n    city: \"\",\n    weather: \"\"\n  });\n  function onGeoSuccess(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n    const API_KEY = \"c4f094ed9d2fc072ab0a4fde9eb23da9\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n    fetch(url).then(response => response.json()).then(data => {\n      const city = document.querySelector(\".location\");\n      const weather = document.querySelector(\".weather\");\n      city.innerText = data.name;\n      weather.innerText = `${data.weather[0].main}/${data.main.temp}`;\n    });\n  }\n  function onGeoFail() {\n    geolocation.innerText = \"Failed to get your current location\";\n  }\n  navigator.geolocation.getCurrentPosition(onGeoSuccess, onGeoFail);\n  return;\n}\n_s(Weather, \"l3Exm8J4ypdQaLj2G/A38LDuntw=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["Weather","info","setInfo","useState","city","weather","onGeoSuccess","position","lat","coords","latitude","lon","longitude","API_KEY","url","fetch","then","response","json","data","document","querySelector","innerText","name","main","temp","onGeoFail","geolocation","navigator","getCurrentPosition"],"sources":["/Users/hwangtaehwan/Desktop/momentum/src/components/Weather.js"],"sourcesContent":["function Weather() {\n\n    const [info,setInfo]=useState({\n        city: \"\",\n        weather: \"\",\n    });\n \n\n  function onGeoSuccess(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n    const API_KEY = \"c4f094ed9d2fc072ab0a4fde9eb23da9\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        const city = document.querySelector(\".location\");\n        const weather = document.querySelector(\".weather\");\n        city.innerText = data.name;\n        weather.innerText = `${data.weather[0].main}/${data.main.temp}`;\n      });\n  }\n\n  function onGeoFail() {\n    geolocation.innerText = \"Failed to get your current location\";\n  }\n\n  navigator.geolocation.getCurrentPosition(onGeoSuccess, onGeoFail);\n\n  return;\n}\nexport default Weather;\n"],"mappings":";AAAA,SAASA,OAAO,GAAG;EAAA;EAEf,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACC,QAAQ,CAAC;IAC1BC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACb,CAAC,CAAC;EAGJ,SAASC,YAAY,CAACC,QAAQ,EAAE;IAC9B,MAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAM,CAACC,QAAQ;IACpC,MAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAM,CAACG,SAAS;IACrC,MAAMC,OAAO,GAAG,kCAAkC;IAClD,MAAMC,GAAG,GAAI,uDAAsDN,GAAI,QAAOG,GAAI,UAASE,OAAQ,eAAc;IACjHE,KAAK,CAACD,GAAG,CAAC,CACPE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMf,IAAI,GAAGgB,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;MAChD,MAAMhB,OAAO,GAAGe,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;MAClDjB,IAAI,CAACkB,SAAS,GAAGH,IAAI,CAACI,IAAI;MAC1BlB,OAAO,CAACiB,SAAS,GAAI,GAAEH,IAAI,CAACd,OAAO,CAAC,CAAC,CAAC,CAACmB,IAAK,IAAGL,IAAI,CAACK,IAAI,CAACC,IAAK,EAAC;IACjE,CAAC,CAAC;EACN;EAEA,SAASC,SAAS,GAAG;IACnBC,WAAW,CAACL,SAAS,GAAG,qCAAqC;EAC/D;EAEAM,SAAS,CAACD,WAAW,CAACE,kBAAkB,CAACvB,YAAY,EAAEoB,SAAS,CAAC;EAEjE;AACF;AAAC,GA9BQ1B,OAAO;AAAA,KAAPA,OAAO;AA+BhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}